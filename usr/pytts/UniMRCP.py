# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_UniMRCP', [dirname(__file__)])
        except ImportError:
            import _UniMRCP
            return _UniMRCP
        if fp is not None:
            try:
                _mod = imp.load_module('_UniMRCP', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _UniMRCP = swig_import_helper()
    del swig_import_helper
else:
    import _UniMRCP
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


try:
    import weakref
    weakref_proxy = weakref.proxy
except:
    weakref_proxy = lambda x: x


DTMF_AUTO = _UniMRCP.DTMF_AUTO
DTMF_INBAND = _UniMRCP.DTMF_INBAND
DTMF_OUTBAND = _UniMRCP.DTMF_OUTBAND
DTMF_BAND_BOTH = _UniMRCP.DTMF_BAND_BOTH
MRCP_SYNTHESIZER = _UniMRCP.MRCP_SYNTHESIZER
MRCP_RECOGNIZER = _UniMRCP.MRCP_RECOGNIZER
MRCP_RECORDER = _UniMRCP.MRCP_RECORDER
SYNTHESIZER_SET_PARAMS = _UniMRCP.SYNTHESIZER_SET_PARAMS
SYNTHESIZER_GET_PARAMS = _UniMRCP.SYNTHESIZER_GET_PARAMS
SYNTHESIZER_SPEAK = _UniMRCP.SYNTHESIZER_SPEAK
SYNTHESIZER_STOP = _UniMRCP.SYNTHESIZER_STOP
SYNTHESIZER_PAUSE = _UniMRCP.SYNTHESIZER_PAUSE
SYNTHESIZER_RESUME = _UniMRCP.SYNTHESIZER_RESUME
SYNTHESIZER_BARGE_IN_OCCURRED = _UniMRCP.SYNTHESIZER_BARGE_IN_OCCURRED
SYNTHESIZER_CONTROL = _UniMRCP.SYNTHESIZER_CONTROL
SYNTHESIZER_DEFINE_LEXICON = _UniMRCP.SYNTHESIZER_DEFINE_LEXICON
RECOGNIZER_SET_PARAMS = _UniMRCP.RECOGNIZER_SET_PARAMS
RECOGNIZER_GET_PARAMS = _UniMRCP.RECOGNIZER_GET_PARAMS
RECOGNIZER_DEFINE_GRAMMAR = _UniMRCP.RECOGNIZER_DEFINE_GRAMMAR
RECOGNIZER_RECOGNIZE = _UniMRCP.RECOGNIZER_RECOGNIZE
RECOGNIZER_GET_RESULT = _UniMRCP.RECOGNIZER_GET_RESULT
RECOGNIZER_START_INPUT_TIMERS = _UniMRCP.RECOGNIZER_START_INPUT_TIMERS
RECOGNIZER_STOP = _UniMRCP.RECOGNIZER_STOP
RECORDER_SET_PARAMS = _UniMRCP.RECORDER_SET_PARAMS
RECORDER_GET_PARAMS = _UniMRCP.RECORDER_GET_PARAMS
RECORDER_RECORD = _UniMRCP.RECORDER_RECORD
RECORDER_STOP = _UniMRCP.RECORDER_STOP
RECORDER_START_INPUT_TIMERS = _UniMRCP.RECORDER_START_INPUT_TIMERS
SYNTHESIZER_SPEECH_MARKER_EVENT = _UniMRCP.SYNTHESIZER_SPEECH_MARKER_EVENT
SYNTHESIZER_SPEAK_COMPLETE = _UniMRCP.SYNTHESIZER_SPEAK_COMPLETE
RECOGNIZER_START_OF_INPUT_EVENT = _UniMRCP.RECOGNIZER_START_OF_INPUT_EVENT
RECOGNIZER_RECOGNITION_COMPLETE = _UniMRCP.RECOGNIZER_RECOGNITION_COMPLETE
RECORDER_START_OF_INPUT_EVENT = _UniMRCP.RECORDER_START_OF_INPUT_EVENT
RECORDER_RECORD_COMPLETE = _UniMRCP.RECORDER_RECORD_COMPLETE
APT_PRIO_EMERGENCY = _UniMRCP.APT_PRIO_EMERGENCY
APT_PRIO_ALERT = _UniMRCP.APT_PRIO_ALERT
APT_PRIO_CRITICAL = _UniMRCP.APT_PRIO_CRITICAL
APT_PRIO_ERROR = _UniMRCP.APT_PRIO_ERROR
APT_PRIO_WARNING = _UniMRCP.APT_PRIO_WARNING
APT_PRIO_NOTICE = _UniMRCP.APT_PRIO_NOTICE
APT_PRIO_INFO = _UniMRCP.APT_PRIO_INFO
APT_PRIO_DEBUG = _UniMRCP.APT_PRIO_DEBUG
APT_LOG_OUTPUT_NONE = _UniMRCP.APT_LOG_OUTPUT_NONE
APT_LOG_OUTPUT_CONSOLE = _UniMRCP.APT_LOG_OUTPUT_CONSOLE
APT_LOG_OUTPUT_FILE = _UniMRCP.APT_LOG_OUTPUT_FILE
APT_LOG_OUTPUT_BOTH = _UniMRCP.APT_LOG_OUTPUT_BOTH
MRCP_SIG_STATUS_CODE_SUCCESS = _UniMRCP.MRCP_SIG_STATUS_CODE_SUCCESS
MRCP_SIG_STATUS_CODE_FAILURE = _UniMRCP.MRCP_SIG_STATUS_CODE_FAILURE
MRCP_SIG_STATUS_CODE_TERMINATE = _UniMRCP.MRCP_SIG_STATUS_CODE_TERMINATE
MRCP_SIG_STATUS_CODE_CANCEL = _UniMRCP.MRCP_SIG_STATUS_CODE_CANCEL
STREAM_DIRECTION_NONE = _UniMRCP.STREAM_DIRECTION_NONE
STREAM_DIRECTION_SEND = _UniMRCP.STREAM_DIRECTION_SEND
STREAM_DIRECTION_RECEIVE = _UniMRCP.STREAM_DIRECTION_RECEIVE
STREAM_DIRECTION_DUPLEX = _UniMRCP.STREAM_DIRECTION_DUPLEX
UNIMRCP_FRAME_TIME_BASE = _UniMRCP.UNIMRCP_FRAME_TIME_BASE
UNIMRCP_BYTES_PER_SAMPLE = _UniMRCP.UNIMRCP_BYTES_PER_SAMPLE
UNIMRCP_BITS_PER_SAMPLE = _UniMRCP.UNIMRCP_BITS_PER_SAMPLE
SAMPLE_RATE_NONE = _UniMRCP.SAMPLE_RATE_NONE
SAMPLE_RATE_8000 = _UniMRCP.SAMPLE_RATE_8000
SAMPLE_RATE_16000 = _UniMRCP.SAMPLE_RATE_16000
SAMPLE_RATE_32000 = _UniMRCP.SAMPLE_RATE_32000
SAMPLE_RATE_48000 = _UniMRCP.SAMPLE_RATE_48000
SAMPLE_RATE_11025 = _UniMRCP.SAMPLE_RATE_11025
SAMPLE_RATE_22050 = _UniMRCP.SAMPLE_RATE_22050
SAMPLE_RATE_44100 = _UniMRCP.SAMPLE_RATE_44100
SAMPLE_RATE_SUPPORTED = _UniMRCP.SAMPLE_RATE_SUPPORTED
MRCP_REQUEST_STATE_COMPLETE = _UniMRCP.MRCP_REQUEST_STATE_COMPLETE
MRCP_REQUEST_STATE_INPROGRESS = _UniMRCP.MRCP_REQUEST_STATE_INPROGRESS
MRCP_REQUEST_STATE_PENDING = _UniMRCP.MRCP_REQUEST_STATE_PENDING
MRCP_REQUEST_STATE_UNKNOWN = _UniMRCP.MRCP_REQUEST_STATE_UNKNOWN
MRCP_STATUS_CODE_UNKNOWN = _UniMRCP.MRCP_STATUS_CODE_UNKNOWN
MRCP_STATUS_CODE_SUCCESS = _UniMRCP.MRCP_STATUS_CODE_SUCCESS
MRCP_STATUS_CODE_SUCCESS_WITH_IGNORE = _UniMRCP.MRCP_STATUS_CODE_SUCCESS_WITH_IGNORE
MRCP_STATUS_CODE_METHOD_NOT_ALLOWED = _UniMRCP.MRCP_STATUS_CODE_METHOD_NOT_ALLOWED
MRCP_STATUS_CODE_METHOD_NOT_VALID = _UniMRCP.MRCP_STATUS_CODE_METHOD_NOT_VALID
MRCP_STATUS_CODE_UNSUPPORTED_PARAM = _UniMRCP.MRCP_STATUS_CODE_UNSUPPORTED_PARAM
MRCP_STATUS_CODE_ILLEGAL_PARAM_VALUE = _UniMRCP.MRCP_STATUS_CODE_ILLEGAL_PARAM_VALUE
MRCP_STATUS_CODE_NOT_FOUND = _UniMRCP.MRCP_STATUS_CODE_NOT_FOUND
MRCP_STATUS_CODE_MISSING_PARAM = _UniMRCP.MRCP_STATUS_CODE_MISSING_PARAM
MRCP_STATUS_CODE_METHOD_FAILED = _UniMRCP.MRCP_STATUS_CODE_METHOD_FAILED
MRCP_STATUS_CODE_UNRECOGNIZED_MESSAGE = _UniMRCP.MRCP_STATUS_CODE_UNRECOGNIZED_MESSAGE
MRCP_STATUS_CODE_UNSUPPORTED_PARAM_VALUE = _UniMRCP.MRCP_STATUS_CODE_UNSUPPORTED_PARAM_VALUE
MRCP_STATUS_CODE_OUT_OF_ORDER = _UniMRCP.MRCP_STATUS_CODE_OUT_OF_ORDER
MRCP_STATUS_CODE_RESOURCE_SPECIFIC_FAILURE = _UniMRCP.MRCP_STATUS_CODE_RESOURCE_SPECIFIC_FAILURE
MRCP_MESSAGE_TYPE_UNKNOWN_TYPE = _UniMRCP.MRCP_MESSAGE_TYPE_UNKNOWN_TYPE
MRCP_MESSAGE_TYPE_REQUEST = _UniMRCP.MRCP_MESSAGE_TYPE_REQUEST
MRCP_MESSAGE_TYPE_RESPONSE = _UniMRCP.MRCP_MESSAGE_TYPE_RESPONSE
MRCP_MESSAGE_TYPE_EVENT = _UniMRCP.MRCP_MESSAGE_TYPE_EVENT
HEADER_GENERIC_ACTIVE_REQUEST_ID_LIST = _UniMRCP.HEADER_GENERIC_ACTIVE_REQUEST_ID_LIST
HEADER_GENERIC_PROXY_SYNC_ID = _UniMRCP.HEADER_GENERIC_PROXY_SYNC_ID
HEADER_GENERIC_ACCEPT_CHARSET = _UniMRCP.HEADER_GENERIC_ACCEPT_CHARSET
HEADER_GENERIC_CONTENT_TYPE = _UniMRCP.HEADER_GENERIC_CONTENT_TYPE
HEADER_GENERIC_CONTENT_ID = _UniMRCP.HEADER_GENERIC_CONTENT_ID
HEADER_GENERIC_CONTENT_BASE = _UniMRCP.HEADER_GENERIC_CONTENT_BASE
HEADER_GENERIC_CONTENT_ENCODING = _UniMRCP.HEADER_GENERIC_CONTENT_ENCODING
HEADER_GENERIC_CONTENT_LOCATION = _UniMRCP.HEADER_GENERIC_CONTENT_LOCATION
HEADER_GENERIC_CONTENT_LENGTH = _UniMRCP.HEADER_GENERIC_CONTENT_LENGTH
HEADER_GENERIC_CACHE_CONTROL = _UniMRCP.HEADER_GENERIC_CACHE_CONTROL
HEADER_GENERIC_LOGGING_TAG = _UniMRCP.HEADER_GENERIC_LOGGING_TAG
HEADER_GENERIC_VENDOR_SPECIFIC_PARAMS = _UniMRCP.HEADER_GENERIC_VENDOR_SPECIFIC_PARAMS
HEADER_GENERIC_ACCEPT = _UniMRCP.HEADER_GENERIC_ACCEPT
HEADER_GENERIC_FETCH_TIMEOUT = _UniMRCP.HEADER_GENERIC_FETCH_TIMEOUT
HEADER_GENERIC_SET_COOKIE = _UniMRCP.HEADER_GENERIC_SET_COOKIE
HEADER_GENERIC_SET_COOKIE2 = _UniMRCP.HEADER_GENERIC_SET_COOKIE2
HEADER_RECOGNIZER_CONFIDENCE_THRESHOLD = _UniMRCP.HEADER_RECOGNIZER_CONFIDENCE_THRESHOLD
HEADER_RECOGNIZER_SENSITIVITY_LEVEL = _UniMRCP.HEADER_RECOGNIZER_SENSITIVITY_LEVEL
HEADER_RECOGNIZER_SPEED_VS_ACCURACY = _UniMRCP.HEADER_RECOGNIZER_SPEED_VS_ACCURACY
HEADER_RECOGNIZER_N_BEST_LIST_LENGTH = _UniMRCP.HEADER_RECOGNIZER_N_BEST_LIST_LENGTH
HEADER_RECOGNIZER_NO_INPUT_TIMEOUT = _UniMRCP.HEADER_RECOGNIZER_NO_INPUT_TIMEOUT
HEADER_RECOGNIZER_RECOGNITION_TIMEOUT = _UniMRCP.HEADER_RECOGNIZER_RECOGNITION_TIMEOUT
HEADER_RECOGNIZER_WAVEFORM_URI = _UniMRCP.HEADER_RECOGNIZER_WAVEFORM_URI
HEADER_RECOGNIZER_COMPLETION_CAUSE = _UniMRCP.HEADER_RECOGNIZER_COMPLETION_CAUSE
HEADER_RECOGNIZER_RECOGNIZER_CONTEXT_BLOCK = _UniMRCP.HEADER_RECOGNIZER_RECOGNIZER_CONTEXT_BLOCK
HEADER_RECOGNIZER_START_INPUT_TIMERS_HDR = _UniMRCP.HEADER_RECOGNIZER_START_INPUT_TIMERS_HDR
HEADER_RECOGNIZER_SPEECH_COMPLETE_TIMEOUT = _UniMRCP.HEADER_RECOGNIZER_SPEECH_COMPLETE_TIMEOUT
HEADER_RECOGNIZER_SPEECH_INCOMPLETE_TIMEOUT = _UniMRCP.HEADER_RECOGNIZER_SPEECH_INCOMPLETE_TIMEOUT
HEADER_RECOGNIZER_DTMF_INTERDIGIT_TIMEOUT = _UniMRCP.HEADER_RECOGNIZER_DTMF_INTERDIGIT_TIMEOUT
HEADER_RECOGNIZER_DTMF_TERM_TIMEOUT = _UniMRCP.HEADER_RECOGNIZER_DTMF_TERM_TIMEOUT
HEADER_RECOGNIZER_DTMF_TERM_CHAR = _UniMRCP.HEADER_RECOGNIZER_DTMF_TERM_CHAR
HEADER_RECOGNIZER_FAILED_URI = _UniMRCP.HEADER_RECOGNIZER_FAILED_URI
HEADER_RECOGNIZER_FAILED_URI_CAUSE = _UniMRCP.HEADER_RECOGNIZER_FAILED_URI_CAUSE
HEADER_RECOGNIZER_SAVE_WAVEFORM = _UniMRCP.HEADER_RECOGNIZER_SAVE_WAVEFORM
HEADER_RECOGNIZER_NEW_AUDIO_CHANNEL = _UniMRCP.HEADER_RECOGNIZER_NEW_AUDIO_CHANNEL
HEADER_RECOGNIZER_SPEECH_LANGUAGE = _UniMRCP.HEADER_RECOGNIZER_SPEECH_LANGUAGE
HEADER_RECOGNIZER_INPUT_TYPE = _UniMRCP.HEADER_RECOGNIZER_INPUT_TYPE
HEADER_RECOGNIZER_INPUT_WAVEFORM_URI = _UniMRCP.HEADER_RECOGNIZER_INPUT_WAVEFORM_URI
HEADER_RECOGNIZER_COMPLETION_REASON = _UniMRCP.HEADER_RECOGNIZER_COMPLETION_REASON
HEADER_RECOGNIZER_MEDIA_TYPE = _UniMRCP.HEADER_RECOGNIZER_MEDIA_TYPE
HEADER_RECOGNIZER_VER_BUFFER_UTTERANCE = _UniMRCP.HEADER_RECOGNIZER_VER_BUFFER_UTTERANCE
HEADER_RECOGNIZER_RECOGNITION_MODE = _UniMRCP.HEADER_RECOGNIZER_RECOGNITION_MODE
HEADER_RECOGNIZER_CANCEL_IF_QUEUE = _UniMRCP.HEADER_RECOGNIZER_CANCEL_IF_QUEUE
HEADER_RECOGNIZER_HOTWORD_MAX_DURATION = _UniMRCP.HEADER_RECOGNIZER_HOTWORD_MAX_DURATION
HEADER_RECOGNIZER_HOTWORD_MIN_DURATION = _UniMRCP.HEADER_RECOGNIZER_HOTWORD_MIN_DURATION
HEADER_RECOGNIZER_INTERPRET_TEXT = _UniMRCP.HEADER_RECOGNIZER_INTERPRET_TEXT
HEADER_RECOGNIZER_DTMF_BUFFER_TIME = _UniMRCP.HEADER_RECOGNIZER_DTMF_BUFFER_TIME
HEADER_RECOGNIZER_CLEAR_DTMF_BUFFER = _UniMRCP.HEADER_RECOGNIZER_CLEAR_DTMF_BUFFER
HEADER_RECOGNIZER_EARLY_NO_MATCH = _UniMRCP.HEADER_RECOGNIZER_EARLY_NO_MATCH
COMPLETION_RECOGNIZER_CAUSE_SUCCESS = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_SUCCESS
COMPLETION_RECOGNIZER_CAUSE_NO_MATCH = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_NO_MATCH
COMPLETION_RECOGNIZER_CAUSE_NO_INPUT_TIMEOUT = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_NO_INPUT_TIMEOUT
COMPLETION_RECOGNIZER_CAUSE_RECOGNITION_TIMEOUT = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_RECOGNITION_TIMEOUT
COMPLETION_RECOGNIZER_CAUSE_GRAM_LOAD_FAILURE = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_GRAM_LOAD_FAILURE
COMPLETION_RECOGNIZER_CAUSE_GRAM_COMP_FAILURE = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_GRAM_COMP_FAILURE
COMPLETION_RECOGNIZER_CAUSE_ERROR = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_ERROR
COMPLETION_RECOGNIZER_CAUSE_SPEECH_TOO_EARLY = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_SPEECH_TOO_EARLY
COMPLETION_RECOGNIZER_CAUSE_TOO_MUCH_SPEECH_TIMEOUT = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_TOO_MUCH_SPEECH_TIMEOUT
COMPLETION_RECOGNIZER_CAUSE_URI_FAILURE = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_URI_FAILURE
COMPLETION_RECOGNIZER_CAUSE_LANGUAGE_UNSUPPORTED = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_LANGUAGE_UNSUPPORTED
COMPLETION_RECOGNIZER_CAUSE_CANCELLED = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_CANCELLED
COMPLETION_RECOGNIZER_CAUSE_SEMANTICS_FAILURE = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_SEMANTICS_FAILURE
COMPLETION_RECOGNIZER_CAUSE_PARTIAL_MATCH = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_PARTIAL_MATCH
COMPLETION_RECOGNIZER_CAUSE_PARTIAL_MATCH_MAXTIME = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_PARTIAL_MATCH_MAXTIME
COMPLETION_RECOGNIZER_CAUSE_NO_MATCH_MAXTIME = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_NO_MATCH_MAXTIME
COMPLETION_RECOGNIZER_CAUSE_GRAM_DEFINITION_FAILURE = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_GRAM_DEFINITION_FAILURE
COMPLETION_RECOGNIZER_CAUSE_UNKNOWN = _UniMRCP.COMPLETION_RECOGNIZER_CAUSE_UNKNOWN
HEADER_RECORDER_SENSITIVITY_LEVEL = _UniMRCP.HEADER_RECORDER_SENSITIVITY_LEVEL
HEADER_RECORDER_NO_INPUT_TIMEOUT = _UniMRCP.HEADER_RECORDER_NO_INPUT_TIMEOUT
HEADER_RECORDER_COMPLETION_CAUSE = _UniMRCP.HEADER_RECORDER_COMPLETION_CAUSE
HEADER_RECORDER_COMPLETION_REASON = _UniMRCP.HEADER_RECORDER_COMPLETION_REASON
HEADER_RECORDER_FAILED_URI = _UniMRCP.HEADER_RECORDER_FAILED_URI
HEADER_RECORDER_FAILED_URI_CAUSE = _UniMRCP.HEADER_RECORDER_FAILED_URI_CAUSE
HEADER_RECORDER_RECORD_URI = _UniMRCP.HEADER_RECORDER_RECORD_URI
HEADER_RECORDER_MEDIA_TYPE = _UniMRCP.HEADER_RECORDER_MEDIA_TYPE
HEADER_RECORDER_MAX_TIME = _UniMRCP.HEADER_RECORDER_MAX_TIME
HEADER_RECORDER_TRIM_LENGTH = _UniMRCP.HEADER_RECORDER_TRIM_LENGTH
HEADER_RECORDER_FINAL_SILENCE = _UniMRCP.HEADER_RECORDER_FINAL_SILENCE
HEADER_RECORDER_CAPTURE_ON_SPEECH = _UniMRCP.HEADER_RECORDER_CAPTURE_ON_SPEECH
HEADER_RECORDER_VER_BUFFER_UTTERANCE = _UniMRCP.HEADER_RECORDER_VER_BUFFER_UTTERANCE
HEADER_RECORDER_START_INPUT_TIMERS_HDR = _UniMRCP.HEADER_RECORDER_START_INPUT_TIMERS_HDR
HEADER_RECORDER_NEW_AUDIO_CHANNEL = _UniMRCP.HEADER_RECORDER_NEW_AUDIO_CHANNEL
COMPLETION_RECORDER_CAUSE_SUCCESS_SILENCE = _UniMRCP.COMPLETION_RECORDER_CAUSE_SUCCESS_SILENCE
COMPLETION_RECORDER_CAUSE_SUCCESS_MAXTIME = _UniMRCP.COMPLETION_RECORDER_CAUSE_SUCCESS_MAXTIME
COMPLETION_RECORDER_CAUSE_NO_INPUT_TIMEOUT = _UniMRCP.COMPLETION_RECORDER_CAUSE_NO_INPUT_TIMEOUT
COMPLETION_RECORDER_CAUSE_URI_FAILURE = _UniMRCP.COMPLETION_RECORDER_CAUSE_URI_FAILURE
COMPLETION_RECORDER_CAUSE_ERROR = _UniMRCP.COMPLETION_RECORDER_CAUSE_ERROR
COMPLETION_RECORDER_CAUSE_UNKNOWN = _UniMRCP.COMPLETION_RECORDER_CAUSE_UNKNOWN
HEADER_SYNTHESIZER_JUMP_SIZE = _UniMRCP.HEADER_SYNTHESIZER_JUMP_SIZE
HEADER_SYNTHESIZER_KILL_ON_BARGE_IN = _UniMRCP.HEADER_SYNTHESIZER_KILL_ON_BARGE_IN
HEADER_SYNTHESIZER_SPEAKER_PROFILE = _UniMRCP.HEADER_SYNTHESIZER_SPEAKER_PROFILE
HEADER_SYNTHESIZER_COMPLETION_CAUSE = _UniMRCP.HEADER_SYNTHESIZER_COMPLETION_CAUSE
HEADER_SYNTHESIZER_COMPLETION_REASON = _UniMRCP.HEADER_SYNTHESIZER_COMPLETION_REASON
HEADER_SYNTHESIZER_VOICE_GENDER = _UniMRCP.HEADER_SYNTHESIZER_VOICE_GENDER
HEADER_SYNTHESIZER_VOICE_AGE = _UniMRCP.HEADER_SYNTHESIZER_VOICE_AGE
HEADER_SYNTHESIZER_VOICE_VARIANT = _UniMRCP.HEADER_SYNTHESIZER_VOICE_VARIANT
HEADER_SYNTHESIZER_VOICE_NAME = _UniMRCP.HEADER_SYNTHESIZER_VOICE_NAME
HEADER_SYNTHESIZER_PROSODY_VOLUME = _UniMRCP.HEADER_SYNTHESIZER_PROSODY_VOLUME
HEADER_SYNTHESIZER_PROSODY_RATE = _UniMRCP.HEADER_SYNTHESIZER_PROSODY_RATE
HEADER_SYNTHESIZER_SPEECH_MARKER = _UniMRCP.HEADER_SYNTHESIZER_SPEECH_MARKER
HEADER_SYNTHESIZER_SPEECH_LANGUAGE = _UniMRCP.HEADER_SYNTHESIZER_SPEECH_LANGUAGE
HEADER_SYNTHESIZER_FETCH_HINT = _UniMRCP.HEADER_SYNTHESIZER_FETCH_HINT
HEADER_SYNTHESIZER_AUDIO_FETCH_HINT = _UniMRCP.HEADER_SYNTHESIZER_AUDIO_FETCH_HINT
HEADER_SYNTHESIZER_FAILED_URI = _UniMRCP.HEADER_SYNTHESIZER_FAILED_URI
HEADER_SYNTHESIZER_FAILED_URI_CAUSE = _UniMRCP.HEADER_SYNTHESIZER_FAILED_URI_CAUSE
HEADER_SYNTHESIZER_SPEAK_RESTART = _UniMRCP.HEADER_SYNTHESIZER_SPEAK_RESTART
HEADER_SYNTHESIZER_SPEAK_LENGTH = _UniMRCP.HEADER_SYNTHESIZER_SPEAK_LENGTH
HEADER_SYNTHESIZER_LOAD_LEXICON = _UniMRCP.HEADER_SYNTHESIZER_LOAD_LEXICON
HEADER_SYNTHESIZER_LEXICON_SEARCH_ORDER = _UniMRCP.HEADER_SYNTHESIZER_LEXICON_SEARCH_ORDER
COMPLETION_SYNTHESIZER_CAUSE_NORMAL = _UniMRCP.COMPLETION_SYNTHESIZER_CAUSE_NORMAL
COMPLETION_SYNTHESIZER_CAUSE_BARGE_IN = _UniMRCP.COMPLETION_SYNTHESIZER_CAUSE_BARGE_IN
COMPLETION_SYNTHESIZER_CAUSE_PARSE_FAILURE = _UniMRCP.COMPLETION_SYNTHESIZER_CAUSE_PARSE_FAILURE
COMPLETION_SYNTHESIZER_CAUSE_URI_FAILURE = _UniMRCP.COMPLETION_SYNTHESIZER_CAUSE_URI_FAILURE
COMPLETION_SYNTHESIZER_CAUSE_ERROR = _UniMRCP.COMPLETION_SYNTHESIZER_CAUSE_ERROR
COMPLETION_SYNTHESIZER_CAUSE_LANGUAGE_UNSUPPORTED = _UniMRCP.COMPLETION_SYNTHESIZER_CAUSE_LANGUAGE_UNSUPPORTED
COMPLETION_SYNTHESIZER_CAUSE_LEXICON_LOAD_FAILURE = _UniMRCP.COMPLETION_SYNTHESIZER_CAUSE_LEXICON_LOAD_FAILURE
COMPLETION_SYNTHESIZER_CAUSE_CANCELLED = _UniMRCP.COMPLETION_SYNTHESIZER_CAUSE_CANCELLED
COMPLETION_SYNTHESIZER_CAUSE_UNKNOWN = _UniMRCP.COMPLETION_SYNTHESIZER_CAUSE_UNKNOWN
VOICE_GENDER_MALE = _UniMRCP.VOICE_GENDER_MALE
VOICE_GENDER_FEMALE = _UniMRCP.VOICE_GENDER_FEMALE
VOICE_GENDER_NEUTRAL = _UniMRCP.VOICE_GENDER_NEUTRAL
VOICE_GENDER_UNKNOWN = _UniMRCP.VOICE_GENDER_UNKNOWN
SPEECH_LENGTH_TYPE_TEXT = _UniMRCP.SPEECH_LENGTH_TYPE_TEXT
SPEECH_LENGTH_TYPE_NUMERIC = _UniMRCP.SPEECH_LENGTH_TYPE_NUMERIC
SPEECH_LENGTH_TYPE_UNKNOWN = _UniMRCP.SPEECH_LENGTH_TYPE_UNKNOWN
SPEECH_UNIT_SECOND = _UniMRCP.SPEECH_UNIT_SECOND
SPEECH_UNIT_WORD = _UniMRCP.SPEECH_UNIT_WORD
SPEECH_UNIT_SENTENCE = _UniMRCP.SPEECH_UNIT_SENTENCE
SPEECH_UNIT_PARAGRAPH = _UniMRCP.SPEECH_UNIT_PARAGRAPH
PROSODY_RATE_TYPE_LABEL = _UniMRCP.PROSODY_RATE_TYPE_LABEL
PROSODY_RATE_TYPE_RELATIVE = _UniMRCP.PROSODY_RATE_TYPE_RELATIVE
PROSODY_RATE_TYPE_UNKNOWN = _UniMRCP.PROSODY_RATE_TYPE_UNKNOWN
PROSODY_RATE_XSLOW = _UniMRCP.PROSODY_RATE_XSLOW
PROSODY_RATE_SLOW = _UniMRCP.PROSODY_RATE_SLOW
PROSODY_RATE_MEDIUM = _UniMRCP.PROSODY_RATE_MEDIUM
PROSODY_RATE_FAST = _UniMRCP.PROSODY_RATE_FAST
PROSODY_RATE_XFAST = _UniMRCP.PROSODY_RATE_XFAST
PROSODY_RATE_DEFAULT = _UniMRCP.PROSODY_RATE_DEFAULT
PROSODY_RATE_UNKNOWN = _UniMRCP.PROSODY_RATE_UNKNOWN
PROSODY_VOLUME_TYPE_LABEL = _UniMRCP.PROSODY_VOLUME_TYPE_LABEL
PROSODY_VOLUME_TYPE_NUMERIC = _UniMRCP.PROSODY_VOLUME_TYPE_NUMERIC
PROSODY_VOLUME_TYPE_RELATIVE = _UniMRCP.PROSODY_VOLUME_TYPE_RELATIVE
PROSODY_VOLUME_TYPE_UNKNOWN = _UniMRCP.PROSODY_VOLUME_TYPE_UNKNOWN
PROSODY_VOLUME_SILENT = _UniMRCP.PROSODY_VOLUME_SILENT
PROSODY_VOLUME_XSOFT = _UniMRCP.PROSODY_VOLUME_XSOFT
PROSODY_VOLUME_SOFT = _UniMRCP.PROSODY_VOLUME_SOFT
PROSODY_VOLUME_MEDIUM = _UniMRCP.PROSODY_VOLUME_MEDIUM
PROSODY_VOLUME_LOUD = _UniMRCP.PROSODY_VOLUME_LOUD
PROSODY_VOLUME_XLOUD = _UniMRCP.PROSODY_VOLUME_XLOUD
PROSODY_VOLUME_DEFAULT = _UniMRCP.PROSODY_VOLUME_DEFAULT
PROSODY_VOLUME_UNKNOWN = _UniMRCP.PROSODY_VOLUME_UNKNOWN
class UniMRCPLogger(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPLogger, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPLogger, name)
    __repr__ = _swig_repr
    def Log(self, *args): return _UniMRCP.UniMRCPLogger_Log(self, *args)
    def __init__(self):
        if self.__class__ == UniMRCPLogger:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPLogger(_self, )
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPLogger
    __del__ = lambda self : None;
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPLogger(self)
        return weakref_proxy(self)
UniMRCPLogger_swigregister = _UniMRCP.UniMRCPLogger_swigregister
UniMRCPLogger_swigregister(UniMRCPLogger)

class UniMRCPClient(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPClient, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPClient, name)
    __repr__ = _swig_repr
    __swig_getmethods__["UniMRCPVersion"] = lambda x: _UniMRCP.UniMRCPClient_UniMRCPVersion
    if _newclass:UniMRCPVersion = staticmethod(_UniMRCP.UniMRCPClient_UniMRCPVersion)
    __swig_getmethods__["WrapperVersion"] = lambda x: _UniMRCP.UniMRCPClient_WrapperVersion
    if _newclass:WrapperVersion = staticmethod(_UniMRCP.UniMRCPClient_WrapperVersion)
    __swig_getmethods__["APRVersion"] = lambda x: _UniMRCP.UniMRCPClient_APRVersion
    if _newclass:APRVersion = staticmethod(_UniMRCP.UniMRCPClient_APRVersion)
    __swig_getmethods__["APRUtilVersion"] = lambda x: _UniMRCP.UniMRCPClient_APRUtilVersion
    if _newclass:APRUtilVersion = staticmethod(_UniMRCP.UniMRCPClient_APRUtilVersion)
    __swig_getmethods__["SofiaSIPVersion"] = lambda x: _UniMRCP.UniMRCPClient_SofiaSIPVersion
    if _newclass:SofiaSIPVersion = staticmethod(_UniMRCP.UniMRCPClient_SofiaSIPVersion)
    __swig_getmethods__["StaticInitialize"] = lambda x: _UniMRCP.UniMRCPClient_StaticInitialize
    if _newclass:StaticInitialize = staticmethod(_UniMRCP.UniMRCPClient_StaticInitialize)
    __swig_getmethods__["StaticDeinitialize"] = lambda x: _UniMRCP.UniMRCPClient_StaticDeinitialize
    if _newclass:StaticDeinitialize = staticmethod(_UniMRCP.UniMRCPClient_StaticDeinitialize)
    def __init__(self, *args):
        this = _UniMRCP.new_UniMRCPClient(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPClient
    __del__ = lambda self : None;
    def Destroy(self): return _UniMRCP.UniMRCPClient_Destroy(self)
UniMRCPClient_swigregister = _UniMRCP.UniMRCPClient_swigregister
UniMRCPClient_swigregister(UniMRCPClient)

def UniMRCPClient_UniMRCPVersion():
  return _UniMRCP.UniMRCPClient_UniMRCPVersion()
UniMRCPClient_UniMRCPVersion = _UniMRCP.UniMRCPClient_UniMRCPVersion

def UniMRCPClient_WrapperVersion():
  return _UniMRCP.UniMRCPClient_WrapperVersion()
UniMRCPClient_WrapperVersion = _UniMRCP.UniMRCPClient_WrapperVersion

def UniMRCPClient_APRVersion():
  return _UniMRCP.UniMRCPClient_APRVersion()
UniMRCPClient_APRVersion = _UniMRCP.UniMRCPClient_APRVersion

def UniMRCPClient_APRUtilVersion():
  return _UniMRCP.UniMRCPClient_APRUtilVersion()
UniMRCPClient_APRUtilVersion = _UniMRCP.UniMRCPClient_APRUtilVersion

def UniMRCPClient_SofiaSIPVersion():
  return _UniMRCP.UniMRCPClient_SofiaSIPVersion()
UniMRCPClient_SofiaSIPVersion = _UniMRCP.UniMRCPClient_SofiaSIPVersion

def UniMRCPClient_StaticInitialize(*args):
  return _UniMRCP.UniMRCPClient_StaticInitialize(*args)
UniMRCPClient_StaticInitialize = _UniMRCP.UniMRCPClient_StaticInitialize

def UniMRCPClient_StaticDeinitialize():
  return _UniMRCP.UniMRCPClient_StaticDeinitialize()
UniMRCPClient_StaticDeinitialize = _UniMRCP.UniMRCPClient_StaticDeinitialize

class UniMRCPClientSession(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPClientSession, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPClientSession, name)
    __repr__ = _swig_repr
    def __init__(self, *args):
        if self.__class__ == UniMRCPClientSession:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPClientSession(_self, *args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPClientSession
    __del__ = lambda self : None;
    def ResourceDiscover(self): return _UniMRCP.UniMRCPClientSession_ResourceDiscover(self)
    def Terminate(self): return _UniMRCP.UniMRCPClientSession_Terminate(self)
    def Destroy(self): return _UniMRCP.UniMRCPClientSession_Destroy(self)
    def GetID(self): return _UniMRCP.UniMRCPClientSession_GetID(self)
    def OnUpdate(self, *args): return _UniMRCP.UniMRCPClientSession_OnUpdate(self, *args)
    def OnTerminate(self, *args): return _UniMRCP.UniMRCPClientSession_OnTerminate(self, *args)
    def OnTerminateEvent(self): return _UniMRCP.UniMRCPClientSession_OnTerminateEvent(self)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPClientSession(self)
        return weakref_proxy(self)
UniMRCPClientSession_swigregister = _UniMRCP.UniMRCPClientSession_swigregister
UniMRCPClientSession_swigregister(UniMRCPClientSession)

class UniMRCPStreamRx(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPStreamRx, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPStreamRx, name)
    __repr__ = _swig_repr
    def __init__(self):
        if self.__class__ == UniMRCPStreamRx:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPStreamRx(_self, )
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPStreamRx
    __del__ = lambda self : None;
    def SendDTMF(self, *args): return _UniMRCP.UniMRCPStreamRx_SendDTMF(self, *args)
    def GetDataSize(self): return _UniMRCP.UniMRCPStreamRx_GetDataSize(self)
    def SetData(self, *args): return _UniMRCP.UniMRCPStreamRx_SetData(self, *args)
    def OnClose(self): return _UniMRCP.UniMRCPStreamRx_OnClose(self)
    def ReadFrame(self): return _UniMRCP.UniMRCPStreamRx_ReadFrame(self)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPStreamRx(self)
        return weakref_proxy(self)
UniMRCPStreamRx_swigregister = _UniMRCP.UniMRCPStreamRx_swigregister
UniMRCPStreamRx_swigregister(UniMRCPStreamRx)

class UniMRCPStreamRxBuffered(UniMRCPStreamRx):
    __swig_setmethods__ = {}
    for _s in [UniMRCPStreamRx]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPStreamRxBuffered, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPStreamRx]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPStreamRxBuffered, name)
    __repr__ = _swig_repr
    def __init__(self):
        if self.__class__ == UniMRCPStreamRxBuffered:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPStreamRxBuffered(_self, )
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPStreamRxBuffered
    __del__ = lambda self : None;
    def SendDTMF(self, *args): return _UniMRCP.UniMRCPStreamRxBuffered_SendDTMF(self, *args)
    def AddData(self, *args): return _UniMRCP.UniMRCPStreamRxBuffered_AddData(self, *args)
    def Flush(self): return _UniMRCP.UniMRCPStreamRxBuffered_Flush(self)
    def ReadFrame(self): return _UniMRCP.UniMRCPStreamRxBuffered_ReadFrame(self)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPStreamRxBuffered(self)
        return weakref_proxy(self)
UniMRCPStreamRxBuffered_swigregister = _UniMRCP.UniMRCPStreamRxBuffered_swigregister
UniMRCPStreamRxBuffered_swigregister(UniMRCPStreamRxBuffered)

class UniMRCPStreamRxMemory(UniMRCPStreamRx):
    __swig_setmethods__ = {}
    for _s in [UniMRCPStreamRx]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPStreamRxMemory, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPStreamRx]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPStreamRxMemory, name)
    __repr__ = _swig_repr
    SRM_NOTHING = _UniMRCP.UniMRCPStreamRxMemory_SRM_NOTHING
    SRM_ZEROS = _UniMRCP.UniMRCPStreamRxMemory_SRM_ZEROS
    SRM_REWIND = _UniMRCP.UniMRCPStreamRxMemory_SRM_REWIND
    def __init__(self, *args):
        if self.__class__ == UniMRCPStreamRxMemory:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPStreamRxMemory(_self, *args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPStreamRxMemory
    __del__ = lambda self : None;
    def SetMemory(self, *args): return _UniMRCP.UniMRCPStreamRxMemory_SetMemory(self, *args)
    def Rewind(self): return _UniMRCP.UniMRCPStreamRxMemory_Rewind(self)
    def Close(self): return _UniMRCP.UniMRCPStreamRxMemory_Close(self)
    def SetPaused(self, *args): return _UniMRCP.UniMRCPStreamRxMemory_SetPaused(self, *args)
    def OnEndOfPlayback(self): return _UniMRCP.UniMRCPStreamRxMemory_OnEndOfPlayback(self)
    def ReadFrame(self): return _UniMRCP.UniMRCPStreamRxMemory_ReadFrame(self)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPStreamRxMemory(self)
        return weakref_proxy(self)
UniMRCPStreamRxMemory_swigregister = _UniMRCP.UniMRCPStreamRxMemory_swigregister
UniMRCPStreamRxMemory_swigregister(UniMRCPStreamRxMemory)

class UniMRCPStreamRxFile(UniMRCPStreamRxMemory):
    __swig_setmethods__ = {}
    for _s in [UniMRCPStreamRxMemory]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPStreamRxFile, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPStreamRxMemory]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPStreamRxFile, name)
    __repr__ = _swig_repr
    def __init__(self, *args):
        if self.__class__ == UniMRCPStreamRxFile:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPStreamRxFile(_self, *args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPStreamRxFile
    __del__ = lambda self : None;
    def Close(self): return _UniMRCP.UniMRCPStreamRxFile_Close(self)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPStreamRxFile(self)
        return weakref_proxy(self)
UniMRCPStreamRxFile_swigregister = _UniMRCP.UniMRCPStreamRxFile_swigregister
UniMRCPStreamRxFile_swigregister(UniMRCPStreamRxFile)

class UniMRCPStreamTx(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPStreamTx, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPStreamTx, name)
    __repr__ = _swig_repr
    def __init__(self):
        if self.__class__ == UniMRCPStreamTx:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPStreamTx(_self, )
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPStreamTx
    __del__ = lambda self : None;
    def GetDTMF(self): return _UniMRCP.UniMRCPStreamTx_GetDTMF(self)
    def HasAudio(self): return _UniMRCP.UniMRCPStreamTx_HasAudio(self)
    def GetDataSize(self): return _UniMRCP.UniMRCPStreamTx_GetDataSize(self)
    def GetData(self, *args): return _UniMRCP.UniMRCPStreamTx_GetData(self, *args)
    def OnClose(self): return _UniMRCP.UniMRCPStreamTx_OnClose(self)
    def WriteFrame(self): return _UniMRCP.UniMRCPStreamTx_WriteFrame(self)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPStreamTx(self)
        return weakref_proxy(self)
UniMRCPStreamTx_swigregister = _UniMRCP.UniMRCPStreamTx_swigregister
UniMRCPStreamTx_swigregister(UniMRCPStreamTx)

class UniMRCPAudioTermination(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPAudioTermination, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPAudioTermination, name)
    __repr__ = _swig_repr
    def __init__(self, *args):
        if self.__class__ == UniMRCPAudioTermination:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPAudioTermination(_self, *args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPAudioTermination
    __del__ = lambda self : None;
    def SetDirection(self, *args): return _UniMRCP.UniMRCPAudioTermination_SetDirection(self, *args)
    def AddCapability(self, *args): return _UniMRCP.UniMRCPAudioTermination_AddCapability(self, *args)
    def EnableDTMFGenerator(self, *args): return _UniMRCP.UniMRCPAudioTermination_EnableDTMFGenerator(self, *args)
    def EnableDTMFDetector(self, *args): return _UniMRCP.UniMRCPAudioTermination_EnableDTMFDetector(self, *args)
    def OnStreamOpenRx(self, *args): return _UniMRCP.UniMRCPAudioTermination_OnStreamOpenRx(self, *args)
    def OnStreamOpenTx(self, *args): return _UniMRCP.UniMRCPAudioTermination_OnStreamOpenTx(self, *args)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPAudioTermination(self)
        return weakref_proxy(self)
UniMRCPAudioTermination_swigregister = _UniMRCP.UniMRCPAudioTermination_swigregister
UniMRCPAudioTermination_swigregister(UniMRCPAudioTermination)

class UniMRCPClientChannel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPClientChannel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPClientChannel, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _UniMRCP.delete_UniMRCPClientChannel
    __del__ = lambda self : None;
    def Remove(self): return _UniMRCP.UniMRCPClientChannel_Remove(self)
    def OnAdd(self, *args): return _UniMRCP.UniMRCPClientChannel_OnAdd(self, *args)
    def OnRemove(self, *args): return _UniMRCP.UniMRCPClientChannel_OnRemove(self, *args)
    def OnTerminateEvent(self): return _UniMRCP.UniMRCPClientChannel_OnTerminateEvent(self)
    def __init__(self, *args):
        if self.__class__ == UniMRCPClientChannel:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPClientChannel(_self, *args)
        try: self.this.append(this)
        except: self.this = this
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPClientChannel(self)
        return weakref_proxy(self)
UniMRCPClientChannel_swigregister = _UniMRCP.UniMRCPClientChannel_swigregister
UniMRCPClientChannel_swigregister(UniMRCPClientChannel)

class UniMRCPMessage(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPMessage, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPMessage, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetMsgType(self): return _UniMRCP.UniMRCPMessage_GetMsgType(self)
    def GetMethodName(self): return _UniMRCP.UniMRCPMessage_GetMethodName(self)
    def GetStatusCode(self): return _UniMRCP.UniMRCPMessage_GetStatusCode(self)
    def GetRequestState(self): return _UniMRCP.UniMRCPMessage_GetRequestState(self)
    def GetBody(self, *args): return _UniMRCP.UniMRCPMessage_GetBody(self, *args)
    def SetBody(self, *args): return _UniMRCP.UniMRCPMessage_SetBody(self, *args)
    def Send(self): return _UniMRCP.UniMRCPMessage_Send(self)
    def AddProperty(self, *args): return _UniMRCP.UniMRCPMessage_AddProperty(self, *args)
    def LazyAddProperty(self, *args): return _UniMRCP.UniMRCPMessage_LazyAddProperty(self, *args)
    def AddPropertyName(self, *args): return _UniMRCP.UniMRCPMessage_AddPropertyName(self, *args)
    def CheckProperty(self, *args): return _UniMRCP.UniMRCPMessage_CheckProperty(self, *args)
    def RemoveProperty(self, *args): return _UniMRCP.UniMRCPMessage_RemoveProperty(self, *args)
    __swig_setmethods__["proxy_sync_id"] = _UniMRCP.UniMRCPMessage_proxy_sync_id_set
    __swig_getmethods__["proxy_sync_id"] = _UniMRCP.UniMRCPMessage_proxy_sync_id_get
    if _newclass:proxy_sync_id = _swig_property(_UniMRCP.UniMRCPMessage_proxy_sync_id_get, _UniMRCP.UniMRCPMessage_proxy_sync_id_set)
    __swig_setmethods__["accept_charset"] = _UniMRCP.UniMRCPMessage_accept_charset_set
    __swig_getmethods__["accept_charset"] = _UniMRCP.UniMRCPMessage_accept_charset_get
    if _newclass:accept_charset = _swig_property(_UniMRCP.UniMRCPMessage_accept_charset_get, _UniMRCP.UniMRCPMessage_accept_charset_set)
    __swig_setmethods__["content_type"] = _UniMRCP.UniMRCPMessage_content_type_set
    __swig_getmethods__["content_type"] = _UniMRCP.UniMRCPMessage_content_type_get
    if _newclass:content_type = _swig_property(_UniMRCP.UniMRCPMessage_content_type_get, _UniMRCP.UniMRCPMessage_content_type_set)
    __swig_setmethods__["content_id"] = _UniMRCP.UniMRCPMessage_content_id_set
    __swig_getmethods__["content_id"] = _UniMRCP.UniMRCPMessage_content_id_get
    if _newclass:content_id = _swig_property(_UniMRCP.UniMRCPMessage_content_id_get, _UniMRCP.UniMRCPMessage_content_id_set)
    __swig_setmethods__["content_base"] = _UniMRCP.UniMRCPMessage_content_base_set
    __swig_getmethods__["content_base"] = _UniMRCP.UniMRCPMessage_content_base_get
    if _newclass:content_base = _swig_property(_UniMRCP.UniMRCPMessage_content_base_get, _UniMRCP.UniMRCPMessage_content_base_set)
    __swig_setmethods__["content_encoding"] = _UniMRCP.UniMRCPMessage_content_encoding_set
    __swig_getmethods__["content_encoding"] = _UniMRCP.UniMRCPMessage_content_encoding_get
    if _newclass:content_encoding = _swig_property(_UniMRCP.UniMRCPMessage_content_encoding_get, _UniMRCP.UniMRCPMessage_content_encoding_set)
    __swig_setmethods__["content_location"] = _UniMRCP.UniMRCPMessage_content_location_set
    __swig_getmethods__["content_location"] = _UniMRCP.UniMRCPMessage_content_location_get
    if _newclass:content_location = _swig_property(_UniMRCP.UniMRCPMessage_content_location_get, _UniMRCP.UniMRCPMessage_content_location_set)
    __swig_setmethods__["cache_control"] = _UniMRCP.UniMRCPMessage_cache_control_set
    __swig_getmethods__["cache_control"] = _UniMRCP.UniMRCPMessage_cache_control_get
    if _newclass:cache_control = _swig_property(_UniMRCP.UniMRCPMessage_cache_control_get, _UniMRCP.UniMRCPMessage_cache_control_set)
    __swig_setmethods__["logging_tag"] = _UniMRCP.UniMRCPMessage_logging_tag_set
    __swig_getmethods__["logging_tag"] = _UniMRCP.UniMRCPMessage_logging_tag_get
    if _newclass:logging_tag = _swig_property(_UniMRCP.UniMRCPMessage_logging_tag_get, _UniMRCP.UniMRCPMessage_logging_tag_set)
    __swig_setmethods__["accept"] = _UniMRCP.UniMRCPMessage_accept_set
    __swig_getmethods__["accept"] = _UniMRCP.UniMRCPMessage_accept_get
    if _newclass:accept = _swig_property(_UniMRCP.UniMRCPMessage_accept_get, _UniMRCP.UniMRCPMessage_accept_set)
    __swig_setmethods__["set_cookie"] = _UniMRCP.UniMRCPMessage_set_cookie_set
    __swig_getmethods__["set_cookie"] = _UniMRCP.UniMRCPMessage_set_cookie_get
    if _newclass:set_cookie = _swig_property(_UniMRCP.UniMRCPMessage_set_cookie_get, _UniMRCP.UniMRCPMessage_set_cookie_set)
    __swig_setmethods__["set_cookie2"] = _UniMRCP.UniMRCPMessage_set_cookie2_set
    __swig_getmethods__["set_cookie2"] = _UniMRCP.UniMRCPMessage_set_cookie2_get
    if _newclass:set_cookie2 = _swig_property(_UniMRCP.UniMRCPMessage_set_cookie2_get, _UniMRCP.UniMRCPMessage_set_cookie2_set)
    __swig_setmethods__["content_length"] = _UniMRCP.UniMRCPMessage_content_length_set
    __swig_getmethods__["content_length"] = _UniMRCP.UniMRCPMessage_content_length_get
    if _newclass:content_length = _swig_property(_UniMRCP.UniMRCPMessage_content_length_get, _UniMRCP.UniMRCPMessage_content_length_set)
    __swig_setmethods__["fetch_timeout"] = _UniMRCP.UniMRCPMessage_fetch_timeout_set
    __swig_getmethods__["fetch_timeout"] = _UniMRCP.UniMRCPMessage_fetch_timeout_get
    if _newclass:fetch_timeout = _swig_property(_UniMRCP.UniMRCPMessage_fetch_timeout_get, _UniMRCP.UniMRCPMessage_fetch_timeout_set)
    def VendorParamCount(self): return _UniMRCP.UniMRCPMessage_VendorParamCount(self)
    def VendorParamAppend(self, *args): return _UniMRCP.UniMRCPMessage_VendorParamAppend(self, *args)
    def VendorParamGetName(self, *args): return _UniMRCP.UniMRCPMessage_VendorParamGetName(self, *args)
    def VendorParamGetValue(self, *args): return _UniMRCP.UniMRCPMessage_VendorParamGetValue(self, *args)
    def VendorParamFind(self, *args): return _UniMRCP.UniMRCPMessage_VendorParamFind(self, *args)
    def ActiveRequestIdListMaxSize(self): return _UniMRCP.UniMRCPMessage_ActiveRequestIdListMaxSize(self)
    def ActiveRequestIdListSizeGet(self): return _UniMRCP.UniMRCPMessage_ActiveRequestIdListSizeGet(self)
    def ActiveRequestIdListSizeSet(self, *args): return _UniMRCP.UniMRCPMessage_ActiveRequestIdListSizeSet(self, *args)
    def ActiveRequestIdGet(self, *args): return _UniMRCP.UniMRCPMessage_ActiveRequestIdGet(self, *args)
    def ActiveRequestIdSet(self, *args): return _UniMRCP.UniMRCPMessage_ActiveRequestIdSet(self, *args)
UniMRCPMessage_swigregister = _UniMRCP.UniMRCPMessage_swigregister
UniMRCPMessage_swigregister(UniMRCPMessage)

class UniMRCPNumericSpeechLength(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPNumericSpeechLength, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPNumericSpeechLength, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_setmethods__["length"] = _UniMRCP.UniMRCPNumericSpeechLength_length_set
    __swig_getmethods__["length"] = _UniMRCP.UniMRCPNumericSpeechLength_length_get
    if _newclass:length = _swig_property(_UniMRCP.UniMRCPNumericSpeechLength_length_get, _UniMRCP.UniMRCPNumericSpeechLength_length_set)
    __swig_setmethods__["unit"] = _UniMRCP.UniMRCPNumericSpeechLength_unit_set
    __swig_getmethods__["unit"] = _UniMRCP.UniMRCPNumericSpeechLength_unit_get
    if _newclass:unit = _swig_property(_UniMRCP.UniMRCPNumericSpeechLength_unit_get, _UniMRCP.UniMRCPNumericSpeechLength_unit_set)
UniMRCPNumericSpeechLength_swigregister = _UniMRCP.UniMRCPNumericSpeechLength_swigregister
UniMRCPNumericSpeechLength_swigregister(UniMRCPNumericSpeechLength)

class UniMRCPSynthesizerMessageBase(UniMRCPMessage):
    __swig_setmethods__ = {}
    for _s in [UniMRCPMessage]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPSynthesizerMessageBase, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPMessage]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPSynthesizerMessageBase, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetMethodID(self): return _UniMRCP.UniMRCPSynthesizerMessageBase_GetMethodID(self)
    def GetEventID(self): return _UniMRCP.UniMRCPSynthesizerMessageBase_GetEventID(self)
    def AddProperty(self, *args): return _UniMRCP.UniMRCPSynthesizerMessageBase_AddProperty(self, *args)
    def LazyAddProperty(self, *args): return _UniMRCP.UniMRCPSynthesizerMessageBase_LazyAddProperty(self, *args)
    def AddPropertyName(self, *args): return _UniMRCP.UniMRCPSynthesizerMessageBase_AddPropertyName(self, *args)
    def CheckProperty(self, *args): return _UniMRCP.UniMRCPSynthesizerMessageBase_CheckProperty(self, *args)
    def RemoveProperty(self, *args): return _UniMRCP.UniMRCPSynthesizerMessageBase_RemoveProperty(self, *args)
UniMRCPSynthesizerMessageBase_swigregister = _UniMRCP.UniMRCPSynthesizerMessageBase_swigregister
UniMRCPSynthesizerMessageBase_swigregister(UniMRCPSynthesizerMessageBase)

class UniMRCPSynthesizerMessage(UniMRCPSynthesizerMessageBase):
    __swig_setmethods__ = {}
    for _s in [UniMRCPSynthesizerMessageBase]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPSynthesizerMessage, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPSynthesizerMessageBase]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPSynthesizerMessage, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_setmethods__["speaker_profile"] = _UniMRCP.UniMRCPSynthesizerMessage_speaker_profile_set
    __swig_getmethods__["speaker_profile"] = _UniMRCP.UniMRCPSynthesizerMessage_speaker_profile_get
    if _newclass:speaker_profile = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_speaker_profile_get, _UniMRCP.UniMRCPSynthesizerMessage_speaker_profile_set)
    __swig_setmethods__["completion_reason"] = _UniMRCP.UniMRCPSynthesizerMessage_completion_reason_set
    __swig_getmethods__["completion_reason"] = _UniMRCP.UniMRCPSynthesizerMessage_completion_reason_get
    if _newclass:completion_reason = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_completion_reason_get, _UniMRCP.UniMRCPSynthesizerMessage_completion_reason_set)
    __swig_setmethods__["speech_marker"] = _UniMRCP.UniMRCPSynthesizerMessage_speech_marker_set
    __swig_getmethods__["speech_marker"] = _UniMRCP.UniMRCPSynthesizerMessage_speech_marker_get
    if _newclass:speech_marker = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_speech_marker_get, _UniMRCP.UniMRCPSynthesizerMessage_speech_marker_set)
    __swig_setmethods__["speech_language"] = _UniMRCP.UniMRCPSynthesizerMessage_speech_language_set
    __swig_getmethods__["speech_language"] = _UniMRCP.UniMRCPSynthesizerMessage_speech_language_get
    if _newclass:speech_language = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_speech_language_get, _UniMRCP.UniMRCPSynthesizerMessage_speech_language_set)
    __swig_setmethods__["fetch_hint"] = _UniMRCP.UniMRCPSynthesizerMessage_fetch_hint_set
    __swig_getmethods__["fetch_hint"] = _UniMRCP.UniMRCPSynthesizerMessage_fetch_hint_get
    if _newclass:fetch_hint = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_fetch_hint_get, _UniMRCP.UniMRCPSynthesizerMessage_fetch_hint_set)
    __swig_setmethods__["audio_fetch_hint"] = _UniMRCP.UniMRCPSynthesizerMessage_audio_fetch_hint_set
    __swig_getmethods__["audio_fetch_hint"] = _UniMRCP.UniMRCPSynthesizerMessage_audio_fetch_hint_get
    if _newclass:audio_fetch_hint = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_audio_fetch_hint_get, _UniMRCP.UniMRCPSynthesizerMessage_audio_fetch_hint_set)
    __swig_setmethods__["failed_uri"] = _UniMRCP.UniMRCPSynthesizerMessage_failed_uri_set
    __swig_getmethods__["failed_uri"] = _UniMRCP.UniMRCPSynthesizerMessage_failed_uri_get
    if _newclass:failed_uri = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_failed_uri_get, _UniMRCP.UniMRCPSynthesizerMessage_failed_uri_set)
    __swig_setmethods__["failed_uri_cause"] = _UniMRCP.UniMRCPSynthesizerMessage_failed_uri_cause_set
    __swig_getmethods__["failed_uri_cause"] = _UniMRCP.UniMRCPSynthesizerMessage_failed_uri_cause_get
    if _newclass:failed_uri_cause = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_failed_uri_cause_get, _UniMRCP.UniMRCPSynthesizerMessage_failed_uri_cause_set)
    __swig_setmethods__["lexicon_search_order"] = _UniMRCP.UniMRCPSynthesizerMessage_lexicon_search_order_set
    __swig_getmethods__["lexicon_search_order"] = _UniMRCP.UniMRCPSynthesizerMessage_lexicon_search_order_get
    if _newclass:lexicon_search_order = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_lexicon_search_order_get, _UniMRCP.UniMRCPSynthesizerMessage_lexicon_search_order_set)
    __swig_setmethods__["voice_name"] = _UniMRCP.UniMRCPSynthesizerMessage_voice_name_set
    __swig_getmethods__["voice_name"] = _UniMRCP.UniMRCPSynthesizerMessage_voice_name_get
    if _newclass:voice_name = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_voice_name_get, _UniMRCP.UniMRCPSynthesizerMessage_voice_name_set)
    __swig_setmethods__["speak_restart"] = _UniMRCP.UniMRCPSynthesizerMessage_speak_restart_set
    __swig_getmethods__["speak_restart"] = _UniMRCP.UniMRCPSynthesizerMessage_speak_restart_get
    if _newclass:speak_restart = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_speak_restart_get, _UniMRCP.UniMRCPSynthesizerMessage_speak_restart_set)
    __swig_setmethods__["load_lexicon"] = _UniMRCP.UniMRCPSynthesizerMessage_load_lexicon_set
    __swig_getmethods__["load_lexicon"] = _UniMRCP.UniMRCPSynthesizerMessage_load_lexicon_get
    if _newclass:load_lexicon = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_load_lexicon_get, _UniMRCP.UniMRCPSynthesizerMessage_load_lexicon_set)
    __swig_setmethods__["kill_on_barge_in"] = _UniMRCP.UniMRCPSynthesizerMessage_kill_on_barge_in_set
    __swig_getmethods__["kill_on_barge_in"] = _UniMRCP.UniMRCPSynthesizerMessage_kill_on_barge_in_get
    if _newclass:kill_on_barge_in = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_kill_on_barge_in_get, _UniMRCP.UniMRCPSynthesizerMessage_kill_on_barge_in_set)
    __swig_setmethods__["completion_cause"] = _UniMRCP.UniMRCPSynthesizerMessage_completion_cause_set
    __swig_getmethods__["completion_cause"] = _UniMRCP.UniMRCPSynthesizerMessage_completion_cause_get
    if _newclass:completion_cause = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_completion_cause_get, _UniMRCP.UniMRCPSynthesizerMessage_completion_cause_set)
    __swig_setmethods__["voice_age"] = _UniMRCP.UniMRCPSynthesizerMessage_voice_age_set
    __swig_getmethods__["voice_age"] = _UniMRCP.UniMRCPSynthesizerMessage_voice_age_get
    if _newclass:voice_age = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_voice_age_get, _UniMRCP.UniMRCPSynthesizerMessage_voice_age_set)
    __swig_setmethods__["voice_variant"] = _UniMRCP.UniMRCPSynthesizerMessage_voice_variant_set
    __swig_getmethods__["voice_variant"] = _UniMRCP.UniMRCPSynthesizerMessage_voice_variant_get
    if _newclass:voice_variant = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_voice_variant_get, _UniMRCP.UniMRCPSynthesizerMessage_voice_variant_set)
    __swig_setmethods__["voice_gender"] = _UniMRCP.UniMRCPSynthesizerMessage_voice_gender_set
    __swig_getmethods__["voice_gender"] = _UniMRCP.UniMRCPSynthesizerMessage_voice_gender_get
    if _newclass:voice_gender = _swig_property(_UniMRCP.UniMRCPSynthesizerMessage_voice_gender_get, _UniMRCP.UniMRCPSynthesizerMessage_voice_gender_set)
    def JumpSizeTypeGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_JumpSizeTypeGet(self)
    def JumpSizeNumericGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_JumpSizeNumericGet(self)
    def JumpSizeTextGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_JumpSizeTextGet(self)
    def JumpSizeNumericSet(self, *args): return _UniMRCP.UniMRCPSynthesizerMessage_JumpSizeNumericSet(self, *args)
    def JumpSizeTextSet(self, *args): return _UniMRCP.UniMRCPSynthesizerMessage_JumpSizeTextSet(self, *args)
    def SpeakLengthTypeGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_SpeakLengthTypeGet(self)
    def SpeakLengthNumericGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_SpeakLengthNumericGet(self)
    def SpeakLengthTextGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_SpeakLengthTextGet(self)
    def SpeakLengthNumericSet(self, *args): return _UniMRCP.UniMRCPSynthesizerMessage_SpeakLengthNumericSet(self, *args)
    def SpeakLengthTextSet(self, *args): return _UniMRCP.UniMRCPSynthesizerMessage_SpeakLengthTextSet(self, *args)
    def ProsodyRateTypeGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyRateTypeGet(self)
    def ProsodyRateLabelGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyRateLabelGet(self)
    def ProsodyRateRelativeGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyRateRelativeGet(self)
    def ProsodyRateLabelSet(self, *args): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyRateLabelSet(self, *args)
    def ProsodyRateRelativeSet(self, *args): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyRateRelativeSet(self, *args)
    def ProsodyVolumeTypeGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyVolumeTypeGet(self)
    def ProsodyVolumeLabelGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyVolumeLabelGet(self)
    def ProsodyVolumeNumericGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyVolumeNumericGet(self)
    def ProsodyVolumeRelativeGet(self): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyVolumeRelativeGet(self)
    def ProsodyVolumeLabelSet(self, *args): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyVolumeLabelSet(self, *args)
    def ProsodyVolumeNumericSet(self, *args): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyVolumeNumericSet(self, *args)
    def ProsodyVolumeRelativeSet(self, *args): return _UniMRCP.UniMRCPSynthesizerMessage_ProsodyVolumeRelativeSet(self, *args)
UniMRCPSynthesizerMessage_swigregister = _UniMRCP.UniMRCPSynthesizerMessage_swigregister
UniMRCPSynthesizerMessage_swigregister(UniMRCPSynthesizerMessage)

class UniMRCPRecognizerMessageBase(UniMRCPMessage):
    __swig_setmethods__ = {}
    for _s in [UniMRCPMessage]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPRecognizerMessageBase, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPMessage]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPRecognizerMessageBase, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetMethodID(self): return _UniMRCP.UniMRCPRecognizerMessageBase_GetMethodID(self)
    def GetEventID(self): return _UniMRCP.UniMRCPRecognizerMessageBase_GetEventID(self)
    def AddProperty(self, *args): return _UniMRCP.UniMRCPRecognizerMessageBase_AddProperty(self, *args)
    def LazyAddProperty(self, *args): return _UniMRCP.UniMRCPRecognizerMessageBase_LazyAddProperty(self, *args)
    def AddPropertyName(self, *args): return _UniMRCP.UniMRCPRecognizerMessageBase_AddPropertyName(self, *args)
    def CheckProperty(self, *args): return _UniMRCP.UniMRCPRecognizerMessageBase_CheckProperty(self, *args)
    def RemoveProperty(self, *args): return _UniMRCP.UniMRCPRecognizerMessageBase_RemoveProperty(self, *args)
UniMRCPRecognizerMessageBase_swigregister = _UniMRCP.UniMRCPRecognizerMessageBase_swigregister
UniMRCPRecognizerMessageBase_swigregister(UniMRCPRecognizerMessageBase)

class UniMRCPRecognizerMessage(UniMRCPRecognizerMessageBase):
    __swig_setmethods__ = {}
    for _s in [UniMRCPRecognizerMessageBase]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPRecognizerMessage, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPRecognizerMessageBase]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPRecognizerMessage, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_setmethods__["recognizer_context_block"] = _UniMRCP.UniMRCPRecognizerMessage_recognizer_context_block_set
    __swig_getmethods__["recognizer_context_block"] = _UniMRCP.UniMRCPRecognizerMessage_recognizer_context_block_get
    if _newclass:recognizer_context_block = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_recognizer_context_block_get, _UniMRCP.UniMRCPRecognizerMessage_recognizer_context_block_set)
    __swig_setmethods__["failed_uri"] = _UniMRCP.UniMRCPRecognizerMessage_failed_uri_set
    __swig_getmethods__["failed_uri"] = _UniMRCP.UniMRCPRecognizerMessage_failed_uri_get
    if _newclass:failed_uri = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_failed_uri_get, _UniMRCP.UniMRCPRecognizerMessage_failed_uri_set)
    __swig_setmethods__["failed_uri_cause"] = _UniMRCP.UniMRCPRecognizerMessage_failed_uri_cause_set
    __swig_getmethods__["failed_uri_cause"] = _UniMRCP.UniMRCPRecognizerMessage_failed_uri_cause_get
    if _newclass:failed_uri_cause = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_failed_uri_cause_get, _UniMRCP.UniMRCPRecognizerMessage_failed_uri_cause_set)
    __swig_setmethods__["speech_language"] = _UniMRCP.UniMRCPRecognizerMessage_speech_language_set
    __swig_getmethods__["speech_language"] = _UniMRCP.UniMRCPRecognizerMessage_speech_language_get
    if _newclass:speech_language = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_speech_language_get, _UniMRCP.UniMRCPRecognizerMessage_speech_language_set)
    __swig_setmethods__["input_type"] = _UniMRCP.UniMRCPRecognizerMessage_input_type_set
    __swig_getmethods__["input_type"] = _UniMRCP.UniMRCPRecognizerMessage_input_type_get
    if _newclass:input_type = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_input_type_get, _UniMRCP.UniMRCPRecognizerMessage_input_type_set)
    __swig_setmethods__["waveform_uri"] = _UniMRCP.UniMRCPRecognizerMessage_waveform_uri_set
    __swig_getmethods__["waveform_uri"] = _UniMRCP.UniMRCPRecognizerMessage_waveform_uri_get
    if _newclass:waveform_uri = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_waveform_uri_get, _UniMRCP.UniMRCPRecognizerMessage_waveform_uri_set)
    __swig_setmethods__["input_waveform_uri"] = _UniMRCP.UniMRCPRecognizerMessage_input_waveform_uri_set
    __swig_getmethods__["input_waveform_uri"] = _UniMRCP.UniMRCPRecognizerMessage_input_waveform_uri_get
    if _newclass:input_waveform_uri = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_input_waveform_uri_get, _UniMRCP.UniMRCPRecognizerMessage_input_waveform_uri_set)
    __swig_setmethods__["completion_reason"] = _UniMRCP.UniMRCPRecognizerMessage_completion_reason_set
    __swig_getmethods__["completion_reason"] = _UniMRCP.UniMRCPRecognizerMessage_completion_reason_get
    if _newclass:completion_reason = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_completion_reason_get, _UniMRCP.UniMRCPRecognizerMessage_completion_reason_set)
    __swig_setmethods__["media_type"] = _UniMRCP.UniMRCPRecognizerMessage_media_type_set
    __swig_getmethods__["media_type"] = _UniMRCP.UniMRCPRecognizerMessage_media_type_get
    if _newclass:media_type = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_media_type_get, _UniMRCP.UniMRCPRecognizerMessage_media_type_set)
    __swig_setmethods__["recognition_mode"] = _UniMRCP.UniMRCPRecognizerMessage_recognition_mode_set
    __swig_getmethods__["recognition_mode"] = _UniMRCP.UniMRCPRecognizerMessage_recognition_mode_get
    if _newclass:recognition_mode = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_recognition_mode_get, _UniMRCP.UniMRCPRecognizerMessage_recognition_mode_set)
    __swig_setmethods__["interpret_text"] = _UniMRCP.UniMRCPRecognizerMessage_interpret_text_set
    __swig_getmethods__["interpret_text"] = _UniMRCP.UniMRCPRecognizerMessage_interpret_text_get
    if _newclass:interpret_text = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_interpret_text_get, _UniMRCP.UniMRCPRecognizerMessage_interpret_text_set)
    __swig_setmethods__["start_input_timers"] = _UniMRCP.UniMRCPRecognizerMessage_start_input_timers_set
    __swig_getmethods__["start_input_timers"] = _UniMRCP.UniMRCPRecognizerMessage_start_input_timers_get
    if _newclass:start_input_timers = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_start_input_timers_get, _UniMRCP.UniMRCPRecognizerMessage_start_input_timers_set)
    __swig_setmethods__["save_waveform"] = _UniMRCP.UniMRCPRecognizerMessage_save_waveform_set
    __swig_getmethods__["save_waveform"] = _UniMRCP.UniMRCPRecognizerMessage_save_waveform_get
    if _newclass:save_waveform = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_save_waveform_get, _UniMRCP.UniMRCPRecognizerMessage_save_waveform_set)
    __swig_setmethods__["new_audio_channel"] = _UniMRCP.UniMRCPRecognizerMessage_new_audio_channel_set
    __swig_getmethods__["new_audio_channel"] = _UniMRCP.UniMRCPRecognizerMessage_new_audio_channel_get
    if _newclass:new_audio_channel = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_new_audio_channel_get, _UniMRCP.UniMRCPRecognizerMessage_new_audio_channel_set)
    __swig_setmethods__["ver_buffer_utterance"] = _UniMRCP.UniMRCPRecognizerMessage_ver_buffer_utterance_set
    __swig_getmethods__["ver_buffer_utterance"] = _UniMRCP.UniMRCPRecognizerMessage_ver_buffer_utterance_get
    if _newclass:ver_buffer_utterance = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_ver_buffer_utterance_get, _UniMRCP.UniMRCPRecognizerMessage_ver_buffer_utterance_set)
    __swig_setmethods__["cancel_if_queue"] = _UniMRCP.UniMRCPRecognizerMessage_cancel_if_queue_set
    __swig_getmethods__["cancel_if_queue"] = _UniMRCP.UniMRCPRecognizerMessage_cancel_if_queue_get
    if _newclass:cancel_if_queue = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_cancel_if_queue_get, _UniMRCP.UniMRCPRecognizerMessage_cancel_if_queue_set)
    __swig_setmethods__["clear_dtmf_buffer"] = _UniMRCP.UniMRCPRecognizerMessage_clear_dtmf_buffer_set
    __swig_getmethods__["clear_dtmf_buffer"] = _UniMRCP.UniMRCPRecognizerMessage_clear_dtmf_buffer_get
    if _newclass:clear_dtmf_buffer = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_clear_dtmf_buffer_get, _UniMRCP.UniMRCPRecognizerMessage_clear_dtmf_buffer_set)
    __swig_setmethods__["early_no_match"] = _UniMRCP.UniMRCPRecognizerMessage_early_no_match_set
    __swig_getmethods__["early_no_match"] = _UniMRCP.UniMRCPRecognizerMessage_early_no_match_get
    if _newclass:early_no_match = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_early_no_match_get, _UniMRCP.UniMRCPRecognizerMessage_early_no_match_set)
    __swig_setmethods__["confidence_threshold"] = _UniMRCP.UniMRCPRecognizerMessage_confidence_threshold_set
    __swig_getmethods__["confidence_threshold"] = _UniMRCP.UniMRCPRecognizerMessage_confidence_threshold_get
    if _newclass:confidence_threshold = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_confidence_threshold_get, _UniMRCP.UniMRCPRecognizerMessage_confidence_threshold_set)
    __swig_setmethods__["sensitivity_level"] = _UniMRCP.UniMRCPRecognizerMessage_sensitivity_level_set
    __swig_getmethods__["sensitivity_level"] = _UniMRCP.UniMRCPRecognizerMessage_sensitivity_level_get
    if _newclass:sensitivity_level = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_sensitivity_level_get, _UniMRCP.UniMRCPRecognizerMessage_sensitivity_level_set)
    __swig_setmethods__["speed_vs_accuracy"] = _UniMRCP.UniMRCPRecognizerMessage_speed_vs_accuracy_set
    __swig_getmethods__["speed_vs_accuracy"] = _UniMRCP.UniMRCPRecognizerMessage_speed_vs_accuracy_get
    if _newclass:speed_vs_accuracy = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_speed_vs_accuracy_get, _UniMRCP.UniMRCPRecognizerMessage_speed_vs_accuracy_set)
    __swig_setmethods__["n_best_list_length"] = _UniMRCP.UniMRCPRecognizerMessage_n_best_list_length_set
    __swig_getmethods__["n_best_list_length"] = _UniMRCP.UniMRCPRecognizerMessage_n_best_list_length_get
    if _newclass:n_best_list_length = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_n_best_list_length_get, _UniMRCP.UniMRCPRecognizerMessage_n_best_list_length_set)
    __swig_setmethods__["no_input_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_no_input_timeout_set
    __swig_getmethods__["no_input_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_no_input_timeout_get
    if _newclass:no_input_timeout = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_no_input_timeout_get, _UniMRCP.UniMRCPRecognizerMessage_no_input_timeout_set)
    __swig_setmethods__["recognition_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_recognition_timeout_set
    __swig_getmethods__["recognition_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_recognition_timeout_get
    if _newclass:recognition_timeout = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_recognition_timeout_get, _UniMRCP.UniMRCPRecognizerMessage_recognition_timeout_set)
    __swig_setmethods__["completion_cause"] = _UniMRCP.UniMRCPRecognizerMessage_completion_cause_set
    __swig_getmethods__["completion_cause"] = _UniMRCP.UniMRCPRecognizerMessage_completion_cause_get
    if _newclass:completion_cause = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_completion_cause_get, _UniMRCP.UniMRCPRecognizerMessage_completion_cause_set)
    __swig_setmethods__["speech_complete_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_speech_complete_timeout_set
    __swig_getmethods__["speech_complete_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_speech_complete_timeout_get
    if _newclass:speech_complete_timeout = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_speech_complete_timeout_get, _UniMRCP.UniMRCPRecognizerMessage_speech_complete_timeout_set)
    __swig_setmethods__["speech_incomplete_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_speech_incomplete_timeout_set
    __swig_getmethods__["speech_incomplete_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_speech_incomplete_timeout_get
    if _newclass:speech_incomplete_timeout = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_speech_incomplete_timeout_get, _UniMRCP.UniMRCPRecognizerMessage_speech_incomplete_timeout_set)
    __swig_setmethods__["dtmf_interdigit_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_dtmf_interdigit_timeout_set
    __swig_getmethods__["dtmf_interdigit_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_dtmf_interdigit_timeout_get
    if _newclass:dtmf_interdigit_timeout = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_dtmf_interdigit_timeout_get, _UniMRCP.UniMRCPRecognizerMessage_dtmf_interdigit_timeout_set)
    __swig_setmethods__["dtmf_term_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_dtmf_term_timeout_set
    __swig_getmethods__["dtmf_term_timeout"] = _UniMRCP.UniMRCPRecognizerMessage_dtmf_term_timeout_get
    if _newclass:dtmf_term_timeout = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_dtmf_term_timeout_get, _UniMRCP.UniMRCPRecognizerMessage_dtmf_term_timeout_set)
    __swig_setmethods__["dtmf_term_char"] = _UniMRCP.UniMRCPRecognizerMessage_dtmf_term_char_set
    __swig_getmethods__["dtmf_term_char"] = _UniMRCP.UniMRCPRecognizerMessage_dtmf_term_char_get
    if _newclass:dtmf_term_char = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_dtmf_term_char_get, _UniMRCP.UniMRCPRecognizerMessage_dtmf_term_char_set)
    __swig_setmethods__["hotword_max_duration"] = _UniMRCP.UniMRCPRecognizerMessage_hotword_max_duration_set
    __swig_getmethods__["hotword_max_duration"] = _UniMRCP.UniMRCPRecognizerMessage_hotword_max_duration_get
    if _newclass:hotword_max_duration = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_hotword_max_duration_get, _UniMRCP.UniMRCPRecognizerMessage_hotword_max_duration_set)
    __swig_setmethods__["hotword_min_duration"] = _UniMRCP.UniMRCPRecognizerMessage_hotword_min_duration_set
    __swig_getmethods__["hotword_min_duration"] = _UniMRCP.UniMRCPRecognizerMessage_hotword_min_duration_get
    if _newclass:hotword_min_duration = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_hotword_min_duration_get, _UniMRCP.UniMRCPRecognizerMessage_hotword_min_duration_set)
    __swig_setmethods__["dtmf_buffer_time"] = _UniMRCP.UniMRCPRecognizerMessage_dtmf_buffer_time_set
    __swig_getmethods__["dtmf_buffer_time"] = _UniMRCP.UniMRCPRecognizerMessage_dtmf_buffer_time_get
    if _newclass:dtmf_buffer_time = _swig_property(_UniMRCP.UniMRCPRecognizerMessage_dtmf_buffer_time_get, _UniMRCP.UniMRCPRecognizerMessage_dtmf_buffer_time_set)
UniMRCPRecognizerMessage_swigregister = _UniMRCP.UniMRCPRecognizerMessage_swigregister
UniMRCPRecognizerMessage_swigregister(UniMRCPRecognizerMessage)

class UniMRCPRecorderMessageBase(UniMRCPMessage):
    __swig_setmethods__ = {}
    for _s in [UniMRCPMessage]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPRecorderMessageBase, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPMessage]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPRecorderMessageBase, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetMethodID(self): return _UniMRCP.UniMRCPRecorderMessageBase_GetMethodID(self)
    def GetEventID(self): return _UniMRCP.UniMRCPRecorderMessageBase_GetEventID(self)
    def AddProperty(self, *args): return _UniMRCP.UniMRCPRecorderMessageBase_AddProperty(self, *args)
    def LazyAddProperty(self, *args): return _UniMRCP.UniMRCPRecorderMessageBase_LazyAddProperty(self, *args)
    def AddPropertyName(self, *args): return _UniMRCP.UniMRCPRecorderMessageBase_AddPropertyName(self, *args)
    def CheckProperty(self, *args): return _UniMRCP.UniMRCPRecorderMessageBase_CheckProperty(self, *args)
    def RemoveProperty(self, *args): return _UniMRCP.UniMRCPRecorderMessageBase_RemoveProperty(self, *args)
UniMRCPRecorderMessageBase_swigregister = _UniMRCP.UniMRCPRecorderMessageBase_swigregister
UniMRCPRecorderMessageBase_swigregister(UniMRCPRecorderMessageBase)

class UniMRCPRecorderMessage(UniMRCPRecorderMessageBase):
    __swig_setmethods__ = {}
    for _s in [UniMRCPRecorderMessageBase]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPRecorderMessage, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPRecorderMessageBase]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPRecorderMessage, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_setmethods__["completion_reason"] = _UniMRCP.UniMRCPRecorderMessage_completion_reason_set
    __swig_getmethods__["completion_reason"] = _UniMRCP.UniMRCPRecorderMessage_completion_reason_get
    if _newclass:completion_reason = _swig_property(_UniMRCP.UniMRCPRecorderMessage_completion_reason_get, _UniMRCP.UniMRCPRecorderMessage_completion_reason_set)
    __swig_setmethods__["failed_uri"] = _UniMRCP.UniMRCPRecorderMessage_failed_uri_set
    __swig_getmethods__["failed_uri"] = _UniMRCP.UniMRCPRecorderMessage_failed_uri_get
    if _newclass:failed_uri = _swig_property(_UniMRCP.UniMRCPRecorderMessage_failed_uri_get, _UniMRCP.UniMRCPRecorderMessage_failed_uri_set)
    __swig_setmethods__["failed_uri_cause"] = _UniMRCP.UniMRCPRecorderMessage_failed_uri_cause_set
    __swig_getmethods__["failed_uri_cause"] = _UniMRCP.UniMRCPRecorderMessage_failed_uri_cause_get
    if _newclass:failed_uri_cause = _swig_property(_UniMRCP.UniMRCPRecorderMessage_failed_uri_cause_get, _UniMRCP.UniMRCPRecorderMessage_failed_uri_cause_set)
    __swig_setmethods__["record_uri"] = _UniMRCP.UniMRCPRecorderMessage_record_uri_set
    __swig_getmethods__["record_uri"] = _UniMRCP.UniMRCPRecorderMessage_record_uri_get
    if _newclass:record_uri = _swig_property(_UniMRCP.UniMRCPRecorderMessage_record_uri_get, _UniMRCP.UniMRCPRecorderMessage_record_uri_set)
    __swig_setmethods__["media_type"] = _UniMRCP.UniMRCPRecorderMessage_media_type_set
    __swig_getmethods__["media_type"] = _UniMRCP.UniMRCPRecorderMessage_media_type_get
    if _newclass:media_type = _swig_property(_UniMRCP.UniMRCPRecorderMessage_media_type_get, _UniMRCP.UniMRCPRecorderMessage_media_type_set)
    __swig_setmethods__["capture_on_speech"] = _UniMRCP.UniMRCPRecorderMessage_capture_on_speech_set
    __swig_getmethods__["capture_on_speech"] = _UniMRCP.UniMRCPRecorderMessage_capture_on_speech_get
    if _newclass:capture_on_speech = _swig_property(_UniMRCP.UniMRCPRecorderMessage_capture_on_speech_get, _UniMRCP.UniMRCPRecorderMessage_capture_on_speech_set)
    __swig_setmethods__["ver_buffer_utterance"] = _UniMRCP.UniMRCPRecorderMessage_ver_buffer_utterance_set
    __swig_getmethods__["ver_buffer_utterance"] = _UniMRCP.UniMRCPRecorderMessage_ver_buffer_utterance_get
    if _newclass:ver_buffer_utterance = _swig_property(_UniMRCP.UniMRCPRecorderMessage_ver_buffer_utterance_get, _UniMRCP.UniMRCPRecorderMessage_ver_buffer_utterance_set)
    __swig_setmethods__["start_input_timers"] = _UniMRCP.UniMRCPRecorderMessage_start_input_timers_set
    __swig_getmethods__["start_input_timers"] = _UniMRCP.UniMRCPRecorderMessage_start_input_timers_get
    if _newclass:start_input_timers = _swig_property(_UniMRCP.UniMRCPRecorderMessage_start_input_timers_get, _UniMRCP.UniMRCPRecorderMessage_start_input_timers_set)
    __swig_setmethods__["new_audio_channel"] = _UniMRCP.UniMRCPRecorderMessage_new_audio_channel_set
    __swig_getmethods__["new_audio_channel"] = _UniMRCP.UniMRCPRecorderMessage_new_audio_channel_get
    if _newclass:new_audio_channel = _swig_property(_UniMRCP.UniMRCPRecorderMessage_new_audio_channel_get, _UniMRCP.UniMRCPRecorderMessage_new_audio_channel_set)
    __swig_setmethods__["sensitivity_level"] = _UniMRCP.UniMRCPRecorderMessage_sensitivity_level_set
    __swig_getmethods__["sensitivity_level"] = _UniMRCP.UniMRCPRecorderMessage_sensitivity_level_get
    if _newclass:sensitivity_level = _swig_property(_UniMRCP.UniMRCPRecorderMessage_sensitivity_level_get, _UniMRCP.UniMRCPRecorderMessage_sensitivity_level_set)
    __swig_setmethods__["no_input_timeout"] = _UniMRCP.UniMRCPRecorderMessage_no_input_timeout_set
    __swig_getmethods__["no_input_timeout"] = _UniMRCP.UniMRCPRecorderMessage_no_input_timeout_get
    if _newclass:no_input_timeout = _swig_property(_UniMRCP.UniMRCPRecorderMessage_no_input_timeout_get, _UniMRCP.UniMRCPRecorderMessage_no_input_timeout_set)
    __swig_setmethods__["completion_cause"] = _UniMRCP.UniMRCPRecorderMessage_completion_cause_set
    __swig_getmethods__["completion_cause"] = _UniMRCP.UniMRCPRecorderMessage_completion_cause_get
    if _newclass:completion_cause = _swig_property(_UniMRCP.UniMRCPRecorderMessage_completion_cause_get, _UniMRCP.UniMRCPRecorderMessage_completion_cause_set)
    __swig_setmethods__["max_time"] = _UniMRCP.UniMRCPRecorderMessage_max_time_set
    __swig_getmethods__["max_time"] = _UniMRCP.UniMRCPRecorderMessage_max_time_get
    if _newclass:max_time = _swig_property(_UniMRCP.UniMRCPRecorderMessage_max_time_get, _UniMRCP.UniMRCPRecorderMessage_max_time_set)
    __swig_setmethods__["trim_length"] = _UniMRCP.UniMRCPRecorderMessage_trim_length_set
    __swig_getmethods__["trim_length"] = _UniMRCP.UniMRCPRecorderMessage_trim_length_get
    if _newclass:trim_length = _swig_property(_UniMRCP.UniMRCPRecorderMessage_trim_length_get, _UniMRCP.UniMRCPRecorderMessage_trim_length_set)
    __swig_setmethods__["final_silence"] = _UniMRCP.UniMRCPRecorderMessage_final_silence_set
    __swig_getmethods__["final_silence"] = _UniMRCP.UniMRCPRecorderMessage_final_silence_get
    if _newclass:final_silence = _swig_property(_UniMRCP.UniMRCPRecorderMessage_final_silence_get, _UniMRCP.UniMRCPRecorderMessage_final_silence_set)
UniMRCPRecorderMessage_swigregister = _UniMRCP.UniMRCPRecorderMessage_swigregister
UniMRCPRecorderMessage_swigregister(UniMRCPRecorderMessage)

class UniMRCPSynthesizerChannel(UniMRCPClientChannel):
    __swig_setmethods__ = {}
    for _s in [UniMRCPClientChannel]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPSynthesizerChannel, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPClientChannel]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPSynthesizerChannel, name)
    __repr__ = _swig_repr
    def __init__(self, *args):
        if self.__class__ == UniMRCPSynthesizerChannel:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPSynthesizerChannel(_self, *args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPSynthesizerChannel
    __del__ = lambda self : None;
    def OnMessageReceive(self, *args): return _UniMRCP.UniMRCPSynthesizerChannel_OnMessageReceive(self, *args)
    def CreateMessage(self, *args): return _UniMRCP.UniMRCPSynthesizerChannel_CreateMessage(self, *args)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPSynthesizerChannel(self)
        return weakref_proxy(self)
UniMRCPSynthesizerChannel_swigregister = _UniMRCP.UniMRCPSynthesizerChannel_swigregister
UniMRCPSynthesizerChannel_swigregister(UniMRCPSynthesizerChannel)

class UniMRCPRecognizerChannel(UniMRCPClientChannel):
    __swig_setmethods__ = {}
    for _s in [UniMRCPClientChannel]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPRecognizerChannel, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPClientChannel]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPRecognizerChannel, name)
    __repr__ = _swig_repr
    def __init__(self, *args):
        if self.__class__ == UniMRCPRecognizerChannel:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPRecognizerChannel(_self, *args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPRecognizerChannel
    __del__ = lambda self : None;
    def OnMessageReceive(self, *args): return _UniMRCP.UniMRCPRecognizerChannel_OnMessageReceive(self, *args)
    def CreateMessage(self, *args): return _UniMRCP.UniMRCPRecognizerChannel_CreateMessage(self, *args)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPRecognizerChannel(self)
        return weakref_proxy(self)
UniMRCPRecognizerChannel_swigregister = _UniMRCP.UniMRCPRecognizerChannel_swigregister
UniMRCPRecognizerChannel_swigregister(UniMRCPRecognizerChannel)

class UniMRCPRecorderChannel(UniMRCPClientChannel):
    __swig_setmethods__ = {}
    for _s in [UniMRCPClientChannel]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UniMRCPRecorderChannel, name, value)
    __swig_getmethods__ = {}
    for _s in [UniMRCPClientChannel]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UniMRCPRecorderChannel, name)
    __repr__ = _swig_repr
    def __init__(self, *args):
        if self.__class__ == UniMRCPRecorderChannel:
            _self = None
        else:
            _self = self
        this = _UniMRCP.new_UniMRCPRecorderChannel(_self, *args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _UniMRCP.delete_UniMRCPRecorderChannel
    __del__ = lambda self : None;
    def OnMessageReceive(self, *args): return _UniMRCP.UniMRCPRecorderChannel_OnMessageReceive(self, *args)
    def CreateMessage(self, *args): return _UniMRCP.UniMRCPRecorderChannel_CreateMessage(self, *args)
    def __disown__(self):
        self.this.disown()
        _UniMRCP.disown_UniMRCPRecorderChannel(self)
        return weakref_proxy(self)
UniMRCPRecorderChannel_swigregister = _UniMRCP.UniMRCPRecorderChannel_swigregister
UniMRCPRecorderChannel_swigregister(UniMRCPRecorderChannel)

# This file is compatible with both classic and new-style classes.
